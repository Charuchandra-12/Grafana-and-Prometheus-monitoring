replicaCount: 1
revisionHistoryLimit: 10

image:
  repository: quay.io/prometheus/alertmanager
  pullPolicy: IfNotPresent
  tag: ""

extraArgs: {}

extraSecretMounts: []

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""

automountServiceAccountToken: true

serviceAccount:
  create: true
  annotations: {}
  name: ""

priorityClassName: ""
schedulerName: ""

podSecurityContext:
  fsGroup: 65534
dnsConfig: {}

hostAliases: []
securityContext:
  runAsUser: 65534
  runAsNonRoot: true
  runAsGroup: 65534

additionalPeers: []

extraInitContainers: []
extraContainers: []

livenessProbe:
  httpGet:
    path: /
    port: http

readinessProbe:
  httpGet:
    path: /
    port: http

service:
  annotations: {}
  labels: {}
  type: ClusterIP
  port: 9093
  clusterPort: 9094
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  extraPorts: []

servicePerReplica:
  enabled: false
  annotations: {}
  loadBalancerSourceRanges: []
  externalTrafficPolicy: Cluster
  type: ClusterIP

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: alertmanager.domain.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

ingressPerReplica:
  enabled: false
  className: ""
  annotations: {}
  labels: {}
  hostPrefix: "alertmanager"
  hostDomain: "domain.com"
  paths:
    - /
  pathType: ImplementationSpecific
  tlsSecretName: ""
  tlsSecretPerReplica:
    enabled: false
    prefix: "alertmanager"

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

podAntiAffinity: ""
podAntiAffinityTopologyKey: kubernetes.io/hostname

topologySpreadConstraints: []

statefulSet:
  annotations: {}

podAnnotations: {}
podLabels: {}

podDisruptionBudget: {}

command: []

persistence:
  enabled: true
  accessModes:
    - ReadWriteOnce
  size: 50Mi

configAnnotations: {}

config:
  enabled: true
  global:
    resolve_timeout: 5m

  route:
    group_interval: 5m
    group_wait: 10s
    repeat_interval: 1h
    receiver: "email-alerts"

  receivers:
    - name: "email-alerts"
      email_configs:
        - to: "kogewev477@getmola.com"
          from: "chinmaykubal12@gmail.com"
          smarthost: "smtp.mailtrap.io:587"

  alerting_rules:
    - alert: MemoryUsageHigh
      expr: (1 - ((node_memory_MemFree + node_memory_Cached) / node_memory_MemTotal)) * 100 > 70
      for: 30s
      labels:
        severity: critical
      annotations:
        summary: "Memory usage is high"

    - alert: CPUUsageHigh
      expr: (1 - rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100 > 70
      for: 30s
      labels:
        severity: critical
      annotations:
        summary: "CPU usage is high"

    - alert: DiskUsageHigh
      expr: (node_filesystem_avail_bytes{fstype=~"ext4|xfs",mountpoint="/"} / node_filesystem_size_bytes{fstype=~"ext4|xfs",mountpoint="/"}) * 100 > 70
      for: 30s
      labels:
        severity: critical
      annotations:
        summary: "Disk usage is high"

configmapReload:
  ## If false, the configmap-reload container will not be deployed
  ##
  enabled: false

  ## configmap-reload container name
  ##
  name: configmap-reload

  ## configmap-reload container image
  ##
  image:
    repository: quay.io/prometheus-operator/prometheus-config-reloader
    tag: v0.66.0
    pullPolicy: IfNotPresent

  # containerPort: 9533

  ## configmap-reload resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}

  extraArgs: {}

  ## Optionally specify extra list of additional volumeMounts
  extraVolumeMounts:
    []
    # - name: extras
    #   mountPath: /usr/share/extras
    #   readOnly: true

  ## Optionally specify extra environment variables to add to alertmanager container
  extraEnv:
    []
    # - name: FOO
    #   value: BAR

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsUser: 65534
    # runAsNonRoot: true
    # runAsGroup: 65534

templates: {}
#   alertmanager.tmpl: |-

## Optionally specify extra list of additional volumeMounts
extraVolumeMounts:
  []
  # - name: extras
  #   mountPath: /usr/share/extras
  #   readOnly: true

## Optionally specify extra list of additional volumes
extraVolumes:
  []
  # - name: extras
  #   emptyDir: {}

## Optionally specify extra environment variables to add to alertmanager container
extraEnv:
  []
  # - name: FOO
  #   value: BAR

testFramework:
  enabled: false
  annotations:
    "helm.sh/hook": test-success
    # "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
